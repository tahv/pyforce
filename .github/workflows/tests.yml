name: Tests & Mypy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  mypy:
    name: Mypy ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install requirements
        run: |
          python -Im pip install --upgrade pip
          python -Im pip install .[mypy]
      - name: Run mypy
        run: |
          python -Im mypy src tests

  tests:
    name: Tests ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build --build-arg="PYTHON_VERSION=${{ matrix.python-version }}" -t local .
      - name: Run tests
        run: |
          docker run --name test local "python -m coverage run -p -m pytest && mkdir cov && mv .coverage.* cov"
          docker cp test:/app/cov/. .
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          if-no-files-found: ignore

  coverage:
    name: Combine and report coverage
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true
      - name: Install requirements
        run: |
          python -Im pip install --upgrade pip
          python -Im pip install coverage
      - name: Combine and report
        run: |
          python -Im coverage combine
          # Report in summary
          python -Im coverage report --show-missing --skip-covered --skip-empty --format=markdown >> $GITHUB_STEP_SUMMARY
          # Report in console
          python -Im coverage report --show-missing --skip-covered --skip-empty

